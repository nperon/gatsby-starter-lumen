{"data":{"site":{"siteMetadata":{"author":{"name":"Nicolas Peron","contacts":{"twitter":"@NicolasPeron5"}},"disqusShortname":"","subtitle":"Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.","title":"Blog by Nicolas Peron","url":"https://nperon.netlify.com"}},"markdownRemark":{"id":"3364df3c-0827-58e6-ac6e-f876daa423c5","html":"<ul>\n<li><a href=\"#redux-and-the-ngrx-library\">Redux and the NgRx library</a></li>\n<li><a href=\"#starting-point\">Starting point</a></li>\n<li><a href=\"#moving-the-disk\">Moving the disk</a></li>\n<li><a href=\"#changing-a-text-label\">Changing a text label</a></li>\n<li><a href=\"#ergonomic-refinements-with-RxJS\">Ergonomic refinements with RxJS</a></li>\n<li><a href=\"#coding-an-NgRX-effect-to-dispatch-asynchronous-actions\">Coding an NgRX @Effect to dispatch asynchronous actions</a></li>\n<li><a href=\"#discussion\">Discussion</a></li>\n</ul>\n<h2 id=\"the-ngrx-library\"><a href=\"#the-ngrx-library\" aria-label=\"the ngrx library permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The NgRx library</h2>\n<p>Redux consists in a store with a single access point intended for holding the state of any JavaScript application. The\nRedux library integrates well in React applications thanks to libraries like react-redux or reselect which provide\nthe connection between the Redux store and the React components. </p>\n<p>NgRx consists in a Redux store and its connecting API which is specific to Angular, the two of them wrapped together\nin a single library. The state selectors of the store are provided in the shape of RxJS Observables. Although RxJS is\nnot our focus here, it is a reactive programming library which is part of most significant enough Angular applications.\nThe use of NgRX with Angular is covered in the official Angular documentation. </p>\n<h2 id=\"starting-point\"><a href=\"#starting-point\" aria-label=\"starting point permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Starting point</h2>\n<p>The stub application which we intend to use as our playground is an Angular application with one single component.\nThe template of that component includes an svg image with shapes, e.g. a disk or a rectangle. Every shape has\nparameters stated as attributes in the respective svg tag. The values of these parameters can be\nbound to variables defined in the component using angular binding directives. We could stick to holding the values\nof the parameters in variables simply defined as fields of the component. Other options like coding some\nAngular Service or using an RxJS Subject would be valid too. Instead, the kind of place where we want to store\nthe parameters of our svg image in this tutorial is an NgRx store. </p>\n<p>Our stub application is available on github. Directly clone the starting point branch with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b 00-starting-point https://github.com/nperon/ngrx-dojo</code></pre></div>\n<p>A node version as recent as version 8.3 at least is required. It is also required to have\n<a href=\"https://cli.angular.io/\">Angular CLI</a> installed to deploy the app locally.\nMove to the cloned project directory with cd ngrx-dojo. Install then the dependencies with\nnpm install. Finally, deploy the project locally with ng serve.</p>\n<p>Application should now display in your web browser at <a href=\"http://localhost:4200/\">http://localhost:4200/</a>.</p>\n<p><img src=\"/media/ngrx-screenshot.jpg\" alt=\"ngrx-screenshot.jpg\"></p>\n<p>The only Angular Component in the code is called editable-svg.component.ts. It is found in the\nsrc/app/editable-svg directory. The associated html template is in the same directory as it is by default\nin a project generated with Angular CLI. Right in the same directory is found a folder called store\nwhich contains our store reducer, editable-svg.reducer.ts. These are the three only files where we need\nto write code in this tutorial.</p>\n<p>It is in the parent module src/app/app.module.ts of the app that our editable-svg reducer is\nconfigured to operate as the NgRx store. Configuration is done at line 19 with the statement</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">StoreModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> editableSvg<span class=\"token punctuation\">:</span> editableSvgReducer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This single line declares our editableSvgReducer as an NgRX singleton store available to all components in the app. </p>\n<p>The template editable-svg.component.html includes the code of the svg with two shapes\n— a red disk and a green rectangle — followed with the code of the dashboard\nwith buttons displayed below the svg. The different parts are commented. </p>\n<p>In the code of the associated component editable-svg.component.ts, it is seen how the\nstore singleton is injected in the constructor. It is also seen how the field editableSvgState\nis initialized from the latter store. </p>\n<p>As it is now, our component is already connected with the store. It is in the reducer store/editable-svg.reducer.ts\nthat the position of the red disk (initialState) is initialized when application starts. This can be\nverified by changing the xCoordinate and yCoordinate in initialState while observing the position of the red disk.\nThe state returned by our editableSvgReducer, so far empty, is just that initialState.</p>\n<p>We are now ready to add new features to the app. In each of the following sections, a new task is proposed.\nIt is going to mainly consist in defining Redux actions while adding code in the reducer to treat the latter actions.\nIn case you fancy other tasks and features rather than the ones we suggest at any stage in the tutorial,\nfeel free to follow up and implement your own ideas. </p>\n<h2 id=\"moving-the-disk\"><a href=\"#moving-the-disk\" aria-label=\"moving the disk permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Moving the disk</h2>\n<h2 id=\"changing-a-text-label\"><a href=\"#changing-a-text-label\" aria-label=\"changing a text label permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changing a text label</h2>\n<h2 id=\"ergonomic-refinements-with-rxjs\"><a href=\"#ergonomic-refinements-with-rxjs\" aria-label=\"ergonomic refinements with rxjs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ergonomic refinements with RxJS</h2>\n<h2 id=\"coding-an-ngrx-effect-to-perform-asynchronous-actions\"><a href=\"#coding-an-ngrx-effect-to-perform-asynchronous-actions\" aria-label=\"coding an ngrx effect to perform asynchronous actions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coding an NgRX @Effect to perform asynchronous actions</h2>\n<h2 id=\"discussion\"><a href=\"#discussion\" aria-label=\"discussion permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Discussion</h2>\n<p>Stateless/Stateful\nPros / cons of the NgRx store, vs a Service, vs an RxJS Subject Scaling with respect</p>","fields":{"slug":"/posts/ngrx-playground/","tagSlugs":["/tag/angular/","/tag/ng-rx/","/tag/redux/","/tag/rx-js/","/tag/java-script/","/tag/front-end/","/tag/web-development/"]},"frontmatter":{"date":"2019-04-20T22:40:32.169Z","description":"NgRx is a library designed to integrate a Redux store in any Angular application. In this tutorial, a stub application is used as a starting point for practicing NgRx Redux.","tags":["Angular","NgRx","Redux","RxJS","JavaScript","Front End","Web Development"],"title":"A Playground Stub for Practicing NgRx"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/ngrx-playground/"}}